<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.1.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- 해당 패키지 내에 있는 클래스들을 프로젝트 실행 시 로드하여 미리 객체를 만들 준비를 함 -->
	<context:component-scan base-package="com.kh.teamprj.service" />

	<!-- 어노테이션으로 트렌잭션 처리를 하기 위한 설정 -->
	<tx:annotation-driven />

	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- Oracle DB 연결 객체 생성 -->
	<bean id="dataSourceSpied" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
		<property name="username" value="TEAMPRJ"></property>
		<property name="password" value="teamprj"></property>
	</bean>

	<!-- SQL문 console에 log로 출력해주는 객체 생성 -->
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="dataSourceSpied" />
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE" />
				<property name="sqlPrefix" value="SQL:::" />
			</bean>
		</property>
	</bean>

	<!-- Mybatis 사용을 위한 객체 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:sql-map-config.xml"></property>
		<property name="dataSource" ref="dataSource"></property>
		<!-- <property name="mapperLocations" value="classpath:mapper/*-mapper.xml"></property> -->
	</bean>

	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	<!-- 트랜젝션 매니저 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- @Transactional 어노테이션 처리 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 파일업로드 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 용량 -->
		<property name="maxUploadSize" value="10485760" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="maxInMemorySize" value="1048576"/>
	</bean>
	
	<!-- 파일 업로드 경로를 설정 -->
	<bean id="uploadPath" class="java.lang.String"> 
		<constructor-arg value="C:\\Git\\workspaceSTS\\TEAM_PRJ\\src\\main\\webapp\\resources\\upload">
		</constructor-arg> 
	</bean>
	
	<!-- 파일 다운로드 --> 
    <bean id="fileDownLoadView" class="com.kh.teamprj.util.FileDownLoadView"/>
    <bean id="fileViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <property name="order" value="0" />
    </bean>
	
	<!-- google email -->
   <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
       <property name="host" value="smtp.gmail.com" />
       <property name="port" value="587" />
       <property name="username" value="" />
       <property name="password" value="" />
       <property name="javaMailProperties">
           <props>
               <prop key="mail.transport.protocol">smtp</prop>
               <prop key="mail.smtp.auth">true</prop>
               <prop key="mail.smtp.starttls.enable">true</prop>
               <prop key="mail.debug">true</prop>
           </props>
       </property>
   </bean>
   
   <!-- 시큐리티 암호화 모듈 객체 생성 -->
   <bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

</beans>
