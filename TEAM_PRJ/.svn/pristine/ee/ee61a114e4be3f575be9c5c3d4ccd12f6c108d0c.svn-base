package com.kh.teamprj.controller;

import java.sql.Time;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.kh.teamprj.service.ProfessorService;
import com.kh.teamprj.vo.DeptVO;
import com.kh.teamprj.vo.LecVO;
import com.kh.teamprj.vo.ScheduleVO;
import com.kh.teamprj.vo.Stu1VO;
import com.kh.teamprj.vo.StudentVO;
import com.kh.teamprj.vo.TimeVO;
import com.kh.teamprj.vo.GradeVO;


@Controller
@RequestMapping("/pro")
public class ProfessorController {
	@Resource(name="professorService")
	private ProfessorService professorService;
	
	//home으로(임시)
	@GetMapping("/home")
	public String home() {
		return "professor/home";
	}
	
	//강의 등록 페이지로 이동
	@GetMapping("/regLecForm")
	public String regLecForm(Model model) {
		//단과대 리스트
		model.addAttribute("collList", professorService.selectCollege());
		
		//학기 정보
		model.addAttribute("sem", professorService.selectSem());
		
		return "professor/reg_lec";
	}
	
	//단과대 선택에 따라 학과 선택창이 나오도록
	@ResponseBody
	@PostMapping("/selectDept")
	public List<DeptVO> selectDept(DeptVO deptVO) {
		List<DeptVO> list = professorService.selectDeptList(deptVO);
		
		return list; 
	}
	
	//강의 등록
	@PostMapping("/regLec")
	public String regLec(LecVO lecVO, HttpSession session, String semNo) {
		//강의 교수 이름가져와 세팅
			//memberVO member = session.getAttribute("loginInfo");
			//lecVO.setLecPr(member.getName());
		lecVO.setEmpNo("EMP_1");
		
		for(int i = 0 ; i< lecVO.getTimeList().size() ; i++) {
			System.out.println(lecVO.getTimeList().get(i).getDay());
		}
		
		//lecVO 정보로 lec를 등록한다
		professorService.insertLec(lecVO);
		
		return "professor/home";
	}

	
	//강의 리스트
	@GetMapping("/lecList")
	public String lecList(Model model, LecVO lecVO) {
		//교수 정보 (나중에 수정 필요)
		lecVO.setEmpNo("EMP_1");
		
		//강의 리스트
		model.addAttribute("lecList", professorService.selectLecList(lecVO));
		
		return "professor/lec_list";
	}
	
	//강의 삭제
	@ResponseBody
	@PostMapping("/deleteLec")
	public boolean deleteLec(String lecNo) {
		
		return professorService.deleteLec(lecNo);
	}
	
	//강의를 듣고있는 학생
	@ResponseBody
	@PostMapping("/lecStuList")
	public List<StudentVO> lecStuList(StudentVO studentVO) {
		
		
		return professorService.selectLecStu(studentVO);
	}
	
	//성적 등록
	@ResponseBody
	@PostMapping("/regGrade")
	public List<StudentVO> regScore(StudentVO studentVO, GradeVO gradeVO) {
		/*
		 * List<GradeVO> gradeList = new ArrayList<GradeVO>(); gradeList.add(gradeVO);
		 * studentVO.setGradeList(gradeList);
		 */
		
		//성적 등록
		professorService.updateGrade(gradeVO);
		
		
		return professorService.selectLecStu(studentVO);
	}
	
	//강의 상세정보 및 수정
	@ResponseBody
	@PostMapping("/lecDetail")
	public LecVO lecDetail(String lecNo) {
		
		
		return professorService.selectLecDetail(lecNo);
	}
	
	
	//교수 시간표
	@GetMapping("/schedule")
	public String schedule(Model model) {
		
		
		return "professor/schedule";
	}
	
	 @ResponseBody
	 @PostMapping("/lecSchedule") 
	 public List<TimeVO> lecSchedule () {
		 String empNo = "EMP_1";
		 
		 List<TimeVO> list = professorService.selectLecTime(empNo);
		 String[] colorArr = getScheduleColor();

		 
		 for(int i = 0 ; i < list.size(); i++) {
			 list.get(i).setColor(colorArr[i]);
		 }
		 
		 for(int i = 0 ; i < list.size(); i++) {
			 int num1 = -1;
			 int num2 = -1;
			 for(int j = 0 ; j < list.size() ; j++) {
				 if(list.get(i).getLecNo().equals(list.get(j).getLecNo())) {
						 num1 = i;
						 num2 = j;
				 }
			 }
			 if(num1 != -1 && num2 != -1 && num1 != num2) {
				 list.get(num1).setColor(colorArr[num1]);
				 list.get(num2).setColor(colorArr[num1]);
			 }
			 
		 }
		 
		 
		 return list;
	 }
	
	public String[] getScheduleColor() {
		String[] colorArr = new String[10];
		colorArr[0] = "#F38181";
		colorArr[1] = "#F07B3F";
		colorArr[2] = "#F9ED69";
		colorArr[3] = "#98DDCA";
		colorArr[4] = "#A2D5F2";
		colorArr[5] = "#C3BEF0";
		colorArr[6] = "#364F6B";
		colorArr[7] = "#1FAB89";
		colorArr[8] = "#142850";
		colorArr[9] = "#FBF0F0";
		
		return colorArr;
	}
	
	
}

