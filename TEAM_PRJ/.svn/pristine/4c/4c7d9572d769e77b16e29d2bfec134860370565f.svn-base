package com.kh.teamprj.controller;

import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.kh.teamprj.service.AdminService;
import com.kh.teamprj.service.ProfessorService;
import com.kh.teamprj.service.StudentService;
import com.kh.teamprj.vo.AcademicAppVO;
import com.kh.teamprj.vo.DeptVO;
import com.kh.teamprj.vo.GradeVO;
import com.kh.teamprj.vo.LecVO;
import com.kh.teamprj.vo.SemesterVO;
import com.kh.teamprj.vo.StudentVO;

@Controller
@RequestMapping("/stu")
public class StudentController {
	@Resource(name="studentService")
	private StudentService studentService;
	
	@Resource(name="adminService")
	private AdminService adminService;
	
	@Resource(name="professorService")
	private ProfessorService professorService;
	
	//홈으로
	@GetMapping("/home")
	public String home(){
		
		return "stu/home";
	}
	@GetMapping("/login")
	public String login() {
		
		return "stu/imsi_stu_login";
	}
	//임시로그인 - 아이디로만 로그인
	@GetMapping("/imsiLogin")
	public String imsiLogin(StudentVO studentVO, HttpSession session) {
		System.out.println(studentVO.getStuNo());
		session.setAttribute("loginInfo", studentVO);
		return "stu/selectPage";
	}

	// 내정보 조회 페이지로 이동
	@GetMapping("/stuInfo")
	public String stuInfo(HttpSession session, StudentVO studentVO) {
		studentVO = (StudentVO)session.getAttribute("loginInfo");

		session.setAttribute("loginInfo", adminService.selectStudentDetail(studentVO));
		return "stu/stu_info";
	}
	//내정보 변경 form ajax
	@ResponseBody
	@GetMapping("/stuInfoAjax")
	public String stuInfoAjax() {
		return "";
	}

	//내정보 변경 저장 ajax
	@ResponseBody
	@GetMapping("/updateStuInfo")
	public StudentVO updateStuInfo(StudentVO studentVO) {
		//memNo를 얻기 위한 쿼리
		StudentVO newStudentVO = adminService.selectStudentDetail(studentVO);
		//memNo를 가진 새로운 학생vo에 변경된 정보를 저장
		newStudentVO.getMemberVO().setMemPhone(studentVO.getMemberVO().getMemPhone());
		newStudentVO.getMemberVO().setMemAddr(studentVO.getMemberVO().getMemAddr());
		//업데이트 쿼리
		studentService.updateStuInfo(newStudentVO);
		//업데이트로 쿼리로 변경된 학생정보를 다시 select하여 리턴
		return adminService.selectStudentDetail(studentVO);
	}

	// 내시간표 조회 페이지로 이동
	@GetMapping("/myClass")
	public String myClass() {

		return "stu/my_class";
	}
		
	// 내 성적 확인 페이지로 이동
	@GetMapping("/myScore")
	public String myScore() {

		return "stu/my_score";
	}

	// 휴복학 조회 및 신청 페이지로 이동
	@GetMapping("/academic")
	public String academic(HttpSession session, StudentVO studentVO, Model model, SemesterVO semesterVO) {
		//세션에 저장되어있는 정보로 studentVO를 세팅
		studentVO = (StudentVO)session.getAttribute("loginInfo");
		//학번으로 학생의 모든 정보를 가져와서 세션에 저장
		session.setAttribute("loginInfo", adminService.selectStudentDetail(studentVO));
		//학생의 휴복학신청내역 조회
		model.addAttribute("applyList", studentService.selectAcademicAppList(studentVO));
		//학기정보 조회
		model.addAttribute("semInfo", studentService.selectSem(semesterVO));
		
		return "stu/academic";
	}
	// 휴복학 신청 버튼 클릭 시 insert
	@PostMapping("academicApp")
	public String academicApp(AcademicAppVO academicAppVO) {
		System.out.println(academicAppVO.toString());
		studentService.insertAcademicApp(academicAppVO);
		return "redirect:/stu/academic";
	}
	//휴학 or 복학 선택시 ajax
	@ResponseBody
	@GetMapping("academicCateAjax")
	public String academicCateAjax(String academicCate) {
		return academicCate;
	}
	//휴/복학신청 취소
	@ResponseBody
	@PostMapping("deleteAcademicAppAjax")
	public String deleteAcademicAppAjax(AcademicAppVO academicAppVO) {
		studentService.deleteAcademicApp(academicAppVO);
		return "";
	}
	// 수강신청 페이지로 이동
		@GetMapping("/regClassForm")
		public String regClassForm(Model model, LecVO lecVO) {
			//단과대 리스트
			model.addAttribute("collList", professorService.selectCollege());
			
			//강의 목록
			model.addAttribute("lecList", studentService.selectLecList(lecVO));
			
			return "stu/reg_class";
		}
		
		//단과대 선택에 따라 학과 리턴
		@ResponseBody
		@PostMapping("selectDept")
		public List<DeptVO> selectDept(DeptVO deptVO) {
			
			return professorService.selectDeptList(deptVO);
		}
		
		//강의 검색
		@ResponseBody
		@PostMapping("searchLecList")
		public List<LecVO> searchLecList(LecVO lecVO) {
			
			return studentService.selectLecList(lecVO);
		}
		
		//수강 신청
		@ResponseBody
		@PostMapping("regClass")
		public List<LecVO> regClass(GradeVO gradeVO, LecVO lecVO) {
			//세션의 stuNo(임시)
			gradeVO.setStuNo("STU_1");
			//학기정보 임시 세팅
			gradeVO.setSemNo("SEM_1");
			
			studentService.insertClass(gradeVO);
			
			//임시
			gradeVO.setLecNo("");
			
			return studentService.selectLecList(lecVO);
		}
}









