<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cartMapper">

	<resultMap type="com.kh.shop.vo.CartVO" id="cart">
		<id column="CART_NUM" property="cartNum"/>
		<result column="MEM_ID" property="memId"/>
		<result column="ITEM_CODE" property="itemCode"/>
		<result column="ITEM_CNT" property="itemCnt"/>
		<result column="CREATE_DATE" property="createDate"/>
		<result column="TOTAL_PRICE" property="totalPrice"/>
		<result column="IS_BUY" property="isBuy"/>
		<association property="item" resultMap="itemMapper.item" />
	</resultMap>
	
	<select id="selectCartList" resultMap="cart">
		SELECT CART.CART_NUM
		    , CART.ITEM_CODE
		    , CART.ITEM_CNT
		    , ITEM.ITEM_NAME
		    , ITEM.ITEM_PRICE
		    , IMAGE.ATTACHED_IMG_NAME
		    , ITEM.ITEM_PRICE * CART.ITEM_CNT AS TOTAL_PRICE
		FROM SHOP_CART CART, SHOP_ITEM ITEM LEFT OUTER JOIN ITEM_IMAGE IMAGE
		ON ITEM.ITEM_CODE = IMAGE.ITEM_CODE
		WHERE CART.ITEM_CODE = ITEM.ITEM_CODE AND NVL(IMAGE.IS_MAIN, 'Y') = 'Y' AND CART.MEM_ID = #{memId} AND CART.IS_BUY = 'N'
		ORDER BY CART.CART_NUM DESC
	</select>
	
	<insert id="insertCart">
		MERGE INTO SHOP_CART
		USING DUAL
		ON (MEM_ID = #{memId} AND ITEM_CODE = #{itemCode} AND IS_BUY = 'N')
		WHEN MATCHED THEN
			UPDATE
			SET ITEM_CNT = ITEM_CNT + #{itemCnt}
		WHEN NOT MATCHED THEN
			INSERT (
				CART_NUM
				, MEM_ID
				, ITEM_CODE
				, ITEM_CNT
			) VALUES (
				SEQ_CART_NUM.NEXTVAL
				, #{memId}
				, #{itemCode}
				, #{itemCnt}
			)
	</insert>
	
	<update id="updateCart">
		UPDATE SHOP_CART
		SET ITEM_CNT = #{itemCnt}
		WHERE CART_NUM = #{cartNum}
	</update>
	
	<delete id="deleteCart">
		DELETE FROM SHOP_CART
		WHERE CART_NUM = #{cartNum}
	</delete>
	
	<delete id="deleteCartList">
		DELETE FROM SHOP_CART
		WHERE CART_NUM IN
		<foreach collection="array" item="cartNum" separator="," open="(" close=")">
           	${cartNum}
       	</foreach>
	</delete>
	
	<update id="updateBuyCart">
		UPDATE SHOP_CART
		SET IS_BUY = 'Y'
		WHERE CART_NUM IN
		<foreach collection="array" item="cartNum" separator="," open="(" close=")">
           	${cartNum}
       	</foreach>
	</update>
	
	<resultMap type="com.kh.shop.vo.BuyItemVO" id="buyItem">
		<id column="BUY_NUM" property="buyNum"/>
		<result column="MEM_ID" property="memId"/>
		<result column="ITEM_CODE" property="itemCode"/>
		<result column="ITEM_CNT" property="itemCnt"/>
		<result column="BUY_PRICE" property="buyPrice"/>
		<result column="BUY_DATE" property="buyDate"/>
		<result column="ORDER_NUM" property="orderNum"/>
		<association property="cart" resultMap="cart"/>
		<association property="member" resultMap="memberMapper.member"/>
	</resultMap>
	
	<select id="selectBuyList" resultMap="buyItem">
		SELECT DISTINCT BUY.ORDER_NUM
		    , BUY.MEM_ID
		    , BUY.BUY_DATE
		    , MEM.MEM_NAME
		FROM SHOP_BUY BUY, SHOP_MEMBER MEM
		WHERE BUY.MEM_ID = MEM.MEM_ID
		<if test="orderNum != null and orderNum != ''">AND BUY.ORDER_NUM LIKE '%' ||  #{orderNum} || '%'</if>
		<if test="beforeDate != null and beforeDate != ''">AND BUY.BUY_DATE &gt;= #{beforeDate}</if>
		<if test="afterDate != null and afterDate != ''">AND BUY.BUY_DATE &lt; TO_DATE(#{afterDate}) + 1</if>
		<if test="memId != null and memId != ''">AND (MEM.MEM_ID LIKE '%' ||  #{memId} || '%' OR MEM.MEM_NAME LIKE '%' ||  #{memId} || '%')</if>
		ORDER BY BUY_DATE DESC
	</select>
	
	<select id="selectOrderInfo" resultMap="buyItem">
		SELECT IMG.ATTACHED_IMG_NAME
		    , ITEM.ITEM_NAME
		    , BUY.ITEM_CNT
		    , BUY.ITEM_CNT * ITEM.ITEM_PRICE TOTAL_PRICE
		    , MEM.MEM_NAME
		FROM SHOP_BUY BUY, SHOP_MEMBER MEM, SHOP_ITEM ITEM LEFT OUTER JOIN ITEM_IMAGE IMG
		ON ITEM.ITEM_CODE = IMG.ITEM_CODE AND IMG.IS_MAIN = 'Y'
		WHERE BUY.ITEM_CODE = ITEM.ITEM_CODE AND BUY.MEM_ID = MEM.MEM_ID AND ORDER_NUM = #{orderNum}
		ORDER BY BUY.BUY_NUM DESC
	</select>
	
	<insert id="buyItemList">
		INSERT INTO SHOP_BUY (
			BUY_NUM
			, MEM_ID
			, ITEM_CODE
			, ITEM_CNT
			, BUY_PRICE
			, ORDER_NUM
		)
		<foreach collection="array" item="item" index="i" separator="UNION ALL">
		SELECT (SELECT NVL(MAX(BUY_NUM), 0) FROM SHOP_BUY) + #{i} + 1
			, #{item.memId}
			, #{item.itemCode}
			, #{item.itemCnt}
			, #{item.buyPrice}
			, #{item.orderNum}
		FROM DUAL
		</foreach>
	</insert>
	
	<insert id="buyItem">
		INSERT INTO SHOP_BUY (
			BUY_NUM
			, MEM_ID
			, ITEM_CODE
			, ITEM_CNT
			, BUY_PRICE
			, ORDER_NUM
		) VALUES (
			(SELECT NVL(MAX(BUY_NUM), 0) FROM SHOP_BUY) + 1
			, #{memId}
			, #{itemCode}
			, #{itemCnt}
			, #{buyPrice}
			, #{orderNum}
		)
	</insert>
	
</mapper>












